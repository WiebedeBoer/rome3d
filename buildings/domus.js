function Domus(){
var vestibulum =new Room("tablinum_wall","tablinum_wall","tablinum_door","concrete_tavern","tiles2",roomSize,0,0);
scene.add( vestibulum ); 
var tablinum1 =new Room("tablinum_wall","tablinum_wall","tablinum_door","tablinum_door","tiles4",roomSize,200,0);
scene.add( tablinum1 ); 
var exedra =new Room("concrete","concrete","concrete_exedra","tablinum_door","tiles2",roomSize,400,0);
scene.add( exedra ); 
var cubiculum =new Room("concrete","door_tavern","concrete","concrete","tiles4",roomSize,100,-100);
scene.add( cubiculum ); 
var alea =new Room("door_tavern","alea","concrete","concrete","tiles1",roomSize,100,100);
scene.add( alea );
var culina =new Room("fresco_tavern","door_tavern","fresco_tavern","fresco_tavern","tiles3",roomSize,300,-100);
scene.add( culina ); 
var triclinium =new Room("door_tavern","concrete_exedra","fresco_tavern","fresco_tavern","tiles4",roomSize,300,100);
scene.add( triclinium ); 
//planes and roofs
var impluve =new Impluvium(roomSize,roomSize,"impluvium",100,0,0);
scene.add( impluve );
var piscine =new Impluvium(roomSize,roomSize,"impluvium",300,0,0);
scene.add( piscine );
var impluve2 =new Impluvium(roomSize,roomSize,"roof_wood",100,36,0);
scene.add( impluve2 );
var piscine2 =new Impluvium(roomSize,roomSize,"roof_wood",300,36,0);
scene.add( piscine2 );
//pillars
var pillar1 = new Pillar(115,0,15);
scene.add(pillar1);
var pillar2 = new Pillar(85,0,15);
scene.add(pillar2);
var pillar3 = new Pillar(115,0,-15);
scene.add(pillar3);
var pillar4 = new Pillar(85,0,-15);
scene.add(pillar4);
var pillar5 = new Pillar(315,0,15);
scene.add(pillar5);
var pillar6 = new Pillar(285,0,15);
scene.add(pillar6);
var pillar7 = new Pillar(315,0,-15);
scene.add(pillar7);
var pillar8 = new Pillar(285,0,-15);
scene.add(pillar8);
//collidable walls
var wireMaterial = new THREE.MeshBasicMaterial( { color: 0xff0000, wireframe:true,visible:false } );
var wallGeometry = new THREE.CubeGeometry( 100, 36, 2, 1, 1, 1 );
//north-south oriented segments
var wallNorth = new THREE.Mesh(wallGeometry, wireMaterial);
wallNorth.position.set(100, 18, -150);
scene.add(wallNorth);
collidableMeshList.push(wallNorth);
var wallNorth2 = new THREE.Mesh(wallGeometry, wireMaterial);
wallNorth2.position.set(100, 18, 150);
scene.add(wallNorth2);
collidableMeshList.push(wallNorth2);
var wallNorth3 = new THREE.Mesh(wallGeometry, wireMaterial);
wallNorth3.position.set(0, 18, -50);
scene.add(wallNorth3);
collidableMeshList.push(wallNorth3);
var wallNorth4 = new THREE.Mesh(wallGeometry, wireMaterial);
wallNorth4.position.set(0, 18, 50);
scene.add(wallNorth4);
collidableMeshList.push(wallNorth4);
var wallNorth5 = new THREE.Mesh(wallGeometry, wireMaterial);
wallNorth5.position.set(200, 18, -50);
scene.add(wallNorth5);
collidableMeshList.push(wallNorth5);
var wallNorth6 = new THREE.Mesh(wallGeometry, wireMaterial);
wallNorth6.position.set(200, 18, 50);
scene.add(wallNorth6);
collidableMeshList.push(wallNorth6);
var wallNorth7 = new THREE.Mesh(wallGeometry, wireMaterial);
wallNorth7.position.set(300, 18, -150);
scene.add(wallNorth7);
collidableMeshList.push(wallNorth7);
var wallNorth8 = new THREE.Mesh(wallGeometry, wireMaterial);
wallNorth8.position.set(300, 18, 150);
scene.add(wallNorth8);
collidableMeshList.push(wallNorth8);
var wallNorth9 = new THREE.Mesh(wallGeometry, wireMaterial);
wallNorth9.position.set(400, 18, -50);
scene.add(wallNorth9);
collidableMeshList.push(wallNorth9);
var wallNorth10 = new THREE.Mesh(wallGeometry, wireMaterial);
wallNorth10.position.set(400, 18, 50);
scene.add(wallNorth10);
collidableMeshList.push(wallNorth10);
//west-east oriented segments
var wallWest = new THREE.Mesh(wallGeometry, wireMaterial);
wallWest.position.set(50, 18, -100);
wallWest.rotation.y = 3.14159 / 2;
scene.add(wallWest);
collidableMeshList.push(wallWest);
var wallWest2 = new THREE.Mesh(wallGeometry, wireMaterial);
wallWest2.position.set(150, 18, -100);
wallWest2.rotation.y = 3.14159 / 2;
scene.add(wallWest2);
collidableMeshList.push(wallWest2);
var wallWest3 = new THREE.Mesh(wallGeometry, wireMaterial);
wallWest3.position.set(50, 18, 100);
wallWest3.rotation.y = 3.14159 / 2;
scene.add(wallWest3);
collidableMeshList.push(wallWest3);
var wallWest4 = new THREE.Mesh(wallGeometry, wireMaterial);
wallWest4.position.set(150, 18, 100);
wallWest4.rotation.y = 3.14159 / 2;
scene.add(wallWest4);
collidableMeshList.push(wallWest4);
var wallWest5 = new THREE.Mesh(wallGeometry, wireMaterial);
wallWest5.position.set(-50, 18, 0);
wallWest5.rotation.y = 3.14159 / 2;
scene.add(wallWest5);
collidableMeshList.push(wallWest5);
var wallWest6 = new THREE.Mesh(wallGeometry, wireMaterial);
wallWest6.position.set(450, 18, 0);
wallWest6.rotation.y = 3.14159 / 2;
scene.add(wallWest6);
collidableMeshList.push(wallWest6);
var wallWest7 = new THREE.Mesh(wallGeometry, wireMaterial);
wallWest7.position.set(250, 18, 100);
wallWest7.rotation.y = 3.14159 / 2;
scene.add(wallWest7);
collidableMeshList.push(wallWest7);
var wallWest8 = new THREE.Mesh(wallGeometry, wireMaterial);
wallWest8.position.set(350, 18, 100);
wallWest8.rotation.y = 3.14159 / 2;
scene.add(wallWest8);
collidableMeshList.push(wallWest8);
var wallWest9 = new THREE.Mesh(wallGeometry, wireMaterial);
wallWest9.position.set(250, 18, -100);
wallWest9.rotation.y = 3.14159 / 2;
scene.add(wallWest9);
collidableMeshList.push(wallWest9);
var wallWest10 = new THREE.Mesh(wallGeometry, wireMaterial);
wallWest10.position.set(350, 18, -100);
wallWest10.rotation.y = 3.14159 / 2;
scene.add(wallWest10);
collidableMeshList.push(wallWest10);
}